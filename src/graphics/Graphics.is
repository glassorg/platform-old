// import Color from "../math/Color"
// import Matrix4 from "../math/Matrix4"
// import ResourceManager from "./resources/ResourceManager"
// import ResourceLoader from "./resources/ResourceLoader"
// import Invalidatable from "./Invalidatable"

export default class Graphics

//     // resources
//     public readonly resources: ResourceManager
//     // timing
    var time = 0
//     // properties
//     abstract get width(): number
//     abstract get height(): number
//     // render lifecycle
//     abstract begin()
//     abstract end()
//     // transformation
//     abstract uniforms: { modelView: Matrix4, projection: Matrix4 }
//     // abstract get transform(): Matrix4
//     // abstract set transform(value: Matrix4)
//     // drawing
    clear(color: Color, depth: Number) ->
//     drawImage(image, x: number, y: number, width: number, height: number) {
//         this.fillRectangle(x, y, width, height, Color.white, image)
//     }
//     abstract fillRectangle(x: number, y: number, width: number, height: number, color: Color, texture?)
//     // request redraw
//     abstract invalidate()

//     /**
//      * Shorthand for Graphics.resources.getResource(loader, id, dependent)
//      */
//     resource<T>(loader: ResourceLoader, id: string, dependent: Invalidatable): T | null {
//         return this.resources.get(loader, id, dependent)
//     }

//     constructor() {
//         this.resources = new ResourceManager(this)
//     }

// }