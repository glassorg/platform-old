import react
    useState
    useEffect
import ..data
    .stores.MemoryStore
    .Store
    .Key
        IdentityKey

export let createUseStore = (store: Store) ->
    return
        (keyOrType: Key | Type, idOrQueryOrDefaultValue, defaultValue) ->
            var key: Key
            if keyOrType is Key
                key = keyOrType
                defaultValue = idOrQueryOrDefaultValue
            else
                if idOrQueryOrDefaultValue is Null
                    throw new Error("Invalid id: " + idOrQueryOrDefaultValue)
                key = Key.create(keyOrType, idOrQueryOrDefaultValue)

            var [value, setValue] = useState(defaultValue)

            useEffect()
                ->
                    let unwatch = store.watch()
                        key
                        newValue ->
                            setValue(newValue)
                    return unwatch
                [key.toString()]

            let setStore = value ->
                store.patch(key, value)
            
            return [value, setStore]

export let store = new MemoryStore()
let useStore = createUseStore(store)
export default useStore
