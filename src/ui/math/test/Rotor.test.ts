import test from "ava"
import Vector3 from "../Vector3"
import Rotor from "../Rotor"
import Matrix4 from "../Matrix4"
import Vector4 from "../Vector4"
import { equivalent } from ".."

const testDataCount = 100

test( "RotorMatrixComparison", assert => {
    for ( let i = 0; i < testDataCount; i++ ) {
        let [ axis, angle ] = testData[ i ]

        let R = Rotor.rotation( axis, angle )
        let M = Matrix4.rotation( axis, angle )
        if ( !M )
            continue

        let v = new Vector4( 1, 2, 3, 1 )
        let Rv = R.rotateVector( v.toVector3() )
        let Mv = v.transform( M ).toVector3()
        assert.true( Rv.equivalent( Mv ) )
    }
} )

test( "RotorToMatrix", assert => {
    for ( let i = 0; i < testDataCount; i++ ) {
        let [ axis, angle ] = testData[ i ]

        let R = Rotor.rotation( axis, angle ).toMatrix4()
        let M = Matrix4.rotation( axis, angle )
        if ( !M )
            continue

        let v = new Vector4( 1, 2, 3, 1 )
        let Rv = v.transform( R ).toVector3()
        let Mv = v.transform( M ).toVector3()
        assert.true( Rv.equivalent( Mv ) )
    }
} )

test( "AngleRecovery", assert => {
    for ( let i = 0; i < testDataCount; i++ ) {
        let [ axis, angle ] = testData[ i ]
        let R = Rotor.rotation( axis, angle )
        assert.true( equivalent( R.angle(), angle ) )
    }
} )

test( "AxisRecovery", assert => {
    for ( let i = 0; i < testDataCount; i++ ) {
        let [ axis, angle ] = testData[ i ]
        let R = Rotor.rotation( axis, angle )
        assert.true( R.axis().normalize().equivalent( axis ) )
    }
} )

test( "RotationBetweenVectors", assert => {
    let x = new Vector3( 1, 0, 0 )
    let y = new Vector3( 0, 1, 0 )
    let z = new Vector3( 0, 0, 1 )

    let testPairs = [
        [ x, y ],
        [ x, z ],
        [y, z ],
    ]

    for (let [a, b] of testPairs) {
        assert.true( Rotor.rotationBetween( a, b ).rotateVector( a ).equivalent( b ) )
        assert.true( Rotor.rotationBetween( b, a ).rotateVector( a ).equivalent( b.negate() ) )
    }

    let u = new Vector3(1, 0, 1)
    let v = new Vector3(0, 1, 1)
    assert.true( Rotor.rotationBetween( x, y ).rotateVector( u ).equivalent( v ) )
} )

// Just copy the output from the console if you want to regenerate.
function generateTestData() {
    for ( let i = 0; i < testDataCount; i++ ) {
        let axis = Vector3.random( 1 )
        let angle = Math.random() * Math.PI * 2
        console.log( `[ new Vector3${ axis.toString() }, ${ angle } ],` )
    }
}

// This was generated to make the tests deterministic.
const testData: [ Vector3, number ][] = [
    [ new Vector3( 0.3183143806047362, -0.619530777076823, -0.7175357631190316 ), 5.655269791217297 ],
    [ new Vector3( -0.055978861241132716, 0.1552869632955675, 0.9862820722919925 ), 1.5005560784513154 ],
    [ new Vector3( 0.05752924491020915, -0.9862605206081909, 0.15485661584098137 ), 5.897537630472334 ],
    [ new Vector3( 0.610187737559412, 0.5500591692351046, 0.5701805286683445 ), 3.603498322629632 ],
    [ new Vector3( -0.15346650301920847, 0.23202278682295882, 0.9605276981149284 ), 4.5627954608643275 ],
    [ new Vector3( -0.7835156469887629, 0.4905329462383688, -0.3814192700670563 ), 1.0581729018428403 ],
    [ new Vector3( -0.21197207612891975, -0.43540595495598555, -0.8749225641909469 ), 5.40246667357736 ],
    [ new Vector3( 0.7907599154801732, -0.5500125837832686, 0.26867250277957794 ), 2.545875619831237 ],
    [ new Vector3( 0.23562266193166512, -0.5739689399402687, -0.7842458907562606 ), 1.1447822368986942 ],
    [ new Vector3( 0.06665746358650884, -0.3955647274101771, 0.9160160091270925 ), 2.371177662330014 ],
    [ new Vector3( 0.8033583071676431, 0.5348239730765496, -0.26187544391819767 ), 2.132791928960023 ],
    [ new Vector3( 0.05972629561555072, -0.46288821333486446, 0.8844022114217608 ), 0.292644524964881 ],
    [ new Vector3( -0.30425297241393423, -0.12941384053029376, 0.943759602153263 ), 2.9208607975085474 ],
    [ new Vector3( -0.21021476927611107, -0.867656169543918, -0.4505358168121233 ), 2.5628860572650187 ],
    [ new Vector3( -0.5259258428992618, 0.7754789297878875, 0.34933427719840726 ), 0.36177211096609474 ],
    [ new Vector3( -0.7251769242793392, 0.30976908786950197, -0.6149484049034148 ), 4.208166955854305 ],
    [ new Vector3( -0.4759338744688601, -0.8067691578858803, -0.3501577830309741 ), 0.05238082924936249 ],
    [ new Vector3( -0.9245059456824687, 0.37896971965655474, -0.040874294870937564 ), 1.3448146241558137 ],
    [ new Vector3( 0.12908579172056825, -0.21478749332637406, -0.9680925529547507 ), 0.8711704231505549 ],
    [ new Vector3( 0.06734543569946634, -0.8032154852460116, -0.5918694759416667 ), 2.308341915431603 ],
    [ new Vector3( 0.1815589585805277, -0.19049878423284108, -0.9647520706196819 ), 3.863192781709593 ],
    [ new Vector3( 0.5075457139161854, 0.16130711250716798, 0.8463907866582134 ), 1.3001309634434302 ],
    [ new Vector3( -0.307501993885776, 0.4701613014995741, 0.8272791997436529 ), 3.02076743883081 ],
    [ new Vector3( -0.06706493660247446, 0.9974103041812004, -0.025980365503034463 ), 5.546177718102425 ],
    [ new Vector3( -0.6973746206018712, 0.47812416632764737, -0.5339156488752586 ), 1.2929656339493067 ],
    [ new Vector3( -0.3326563372841837, 0.3491004808844609, -0.8760528611396173 ), 0.5469536349389472 ],
    [ new Vector3( -0.13435559787108597, -0.24904625513451742, 0.9591269655911964 ), 0.9398401368140666 ],
    [ new Vector3( -0.6548623058831036, 0.5277671172908267, 0.5409410598577219 ), 2.344635968314676 ],
    [ new Vector3( 0.0016086534272681501, 0.002195895572194255, -0.9999962951315304 ), 4.97897318164361 ],
    [ new Vector3( -0.09403804839969995, 0.4949021248313263, 0.8638453173402134 ), 1.0087150906355764 ],
    [ new Vector3( 0.24746519128144057, 0.8017937633019961, 0.5439556417889815 ), 4.839713703535471 ],
    [ new Vector3( -0.8070490199625789, 0.4527589825214596, 0.3790530083294072 ), 2.929621980365794 ],
    [ new Vector3( -0.039885078369442106, 0.9389578030599529, 0.3417124882065186 ), 0.9189624328894077 ],
    [ new Vector3( 0.29434594819609383, 0.9213002484326928, -0.25409902600836753 ), 5.576309668371105 ],
    [ new Vector3( 0.08914494072672317, 0.48125282864017743, -0.8720372093372261 ), 6.022831238407366 ],
    [ new Vector3( -0.07209700004813291, -0.06831942689470162, -0.9950550127972017 ), 1.0908406247529658 ],
    [ new Vector3( -0.2190161896452544, -0.22302706768988756, -0.9498899071739442 ), 6.238275592286081 ],
    [ new Vector3( 0.16395709517219315, -0.06937435189725392, 0.984025035373355 ), 0.9607633045702041 ],
    [ new Vector3( -0.005850373286376813, -0.09492962372538348, 0.9954667948614696 ), 4.47230799092511 ],
    [ new Vector3( -0.0032441003055412782, 0.1397943950703486, -0.9901752384907042 ), 2.914615606508401 ],
    [ new Vector3( 0.31742676714730966, -0.9308266845925592, -0.18111303307280804 ), 5.854311785762281 ],
    [ new Vector3( 0.0061069608666412195, 0.03187823367011165, -0.9994731028132008 ), 0.8184864501427644 ],
    [ new Vector3( 0.1918117591777325, 0.2961267063204619, -0.93569077308956 ), 4.321441556210914 ],
    [ new Vector3( 0.050640677915669036, -0.2300802928061412, -0.9718531682319514 ), 5.564133325087904 ],
    [ new Vector3( 0.16309902368809176, -0.6077564898393663, 0.7771941569068335 ), 0.2855769124268159 ],
    [ new Vector3( -0.3193380742378093, -0.8920475127668863, -0.3198037356074804 ), 4.407516782877464 ],
    [ new Vector3( 0.4706426605346061, 0.8470609146678045, 0.24694795590781837 ), 4.222500352782209 ],
    [ new Vector3( 0.5329460014673593, -0.8346980822790888, -0.1387359757221068 ), 3.15001008878655 ],
    [ new Vector3( 0.6915545447891545, -0.19791371750402997, -0.6946815615842991 ), 4.661968040712433 ],
    [ new Vector3( 0.6393338632400107, 0.7688537991303462, 0.010772505624814072 ), 0.7239440277710925 ],
    [ new Vector3( -0.2708795973702577, -0.9301280729971944, 0.24796373031363483 ), 2.850875119631338 ],
    [ new Vector3( -0.41393801453668017, 0.17058951732150082, 0.8941781347703871 ), 3.9062324288286066 ],
    [ new Vector3( 0.0007599939467331207, 0.0001433275918740842, 0.9999997009331565 ), 1.2719980153992143 ],
    [ new Vector3( 0.015068771380560531, 0.8550318282385223, 0.5183565421871036 ), 2.8513167341299583 ],
    [ new Vector3( -0.09544607769110545, 0.410286976315731, -0.9069479826975074 ), 2.058452690494088 ],
    [ new Vector3( 0.3238827310955542, 0.7138675484989759, 0.6208809062116077 ), 1.6006968277660267 ],
    [ new Vector3( 0.021287808922191707, 0.043502938152316456, 0.9988264731991278 ), 5.666481815112454 ],
    [ new Vector3( -0.15643205975087726, 0.4640776784576763, -0.8718720772220152 ), 0.4808491707207684 ],
    [ new Vector3( -0.050996553704338574, -0.05201944684626664, 0.9973431348638687 ), 2.4736381960176494 ],
    [ new Vector3( -0.681835671500817, -0.3780845392088324, -0.6262205667975739 ), 2.5300106033283147 ],
    [ new Vector3( -0.6452050643930759, -0.11257287334047891, -0.7556704129906074 ), 3.400871975293877 ],
    [ new Vector3( -0.0625384105918682, -0.9563644346661797, -0.28540500224467236 ), 4.673482184705819 ],
    [ new Vector3( -0.17003871599623543, 0.8983430825920846, -0.4050512819647688 ), 4.787332752479159 ],
    [ new Vector3( -0.9324537713395172, -0.3435087153914508, 0.11194519536284961 ), 0.5093746007214548 ],
    [ new Vector3( 0.3152480755426957, 0.3550188852869268, 0.8801024042441055 ), 1.6017864274039524 ],
    [ new Vector3( -0.5161239237027521, 0.1307793167926553, 0.846470829787372 ), 0.5279896347164315 ],
    [ new Vector3( 0.49148804292503173, -0.6388424710487083, 0.5918781976438249 ), 3.2895771218069974 ],
    [ new Vector3( 0.2806889553361447, -0.9481447948981888, -0.14911458097642588 ), 1.2328251211212145 ],
    [ new Vector3( -0.04533570266009217, -0.04115289775106954, -0.9981237964656517 ), 2.68001943237692 ],
    [ new Vector3( 0.23790978713543018, -0.9093450604640491, 0.34130703800948703 ), 5.83115482936733 ],
    [ new Vector3( 0.0016758818575965653, -0.01972892591007286, 0.9998039612356185 ), 5.034379436077866 ],
    [ new Vector3( 0.20998553756257346, -0.8102136249200866, -0.5472293449810695 ), 4.206994557105254 ],
    [ new Vector3( -0.011991603226191683, 0.018092966293355783, -0.999764395256589 ), 5.4279246587891 ],
    [ new Vector3( -0.2926639698663092, 0.06560842960467379, -0.9539619147046179 ), 2.866581767822285 ],
    [ new Vector3( 0.031523335912629576, 0.6031479664643475, 0.7970061542063911 ), 3.6795831814108095 ],
    [ new Vector3( 0.6289737627464801, -0.7698742003998047, -0.1081005149631382 ), 3.9183354576615397 ],
    [ new Vector3( 0.0547153094128267, 0.06295778540509403, -0.9965152041854378 ), 5.243526578439814 ],
    [ new Vector3( 0.07716937274274809, 0.09931168541570264, 0.9920595128571589 ), 3.256458213306073 ],
    [ new Vector3( 0.450577367663488, -0.08951002256172605, -0.888238701932336 ), 5.134169014659898 ],
    [ new Vector3( -0.5587595037077391, 0.4813782606568592, 0.675324208942089 ), 0.07934696390788482 ],
    [ new Vector3( 0.17190483284443206, -0.9842975637782686, -0.04008783337738745 ), 2.8584473016393543 ],
    [ new Vector3( 0.5571417325124799, 0.7926912193426345, -0.24745448201655107 ), 0.08288623580909114 ],
    [ new Vector3( 0.9962742508620871, 0.07240096992058544, 0.04685847440693808 ), 5.851663612883017 ],
    [ new Vector3( -0.17735485614499266, -0.8925537961731405, -0.4145997780253928 ), 4.395808669905679 ],
    [ new Vector3( -0.12681291399929764, -0.9894297361897965, 0.07033691766346159 ), 2.5074243012230655 ],
    [ new Vector3( 0.2368106889919994, 0.21008179470102106, -0.9485706811378541 ), 4.507489057356285 ],
    [ new Vector3( 0.055754131871731324, -0.43296821795444973, 0.8996832770595314 ), 0.779105214378128 ],
    [ new Vector3( -0.5847044994091185, 0.2793467689287775, 0.7616337906499319 ), 1.6050504815890794 ],
    [ new Vector3( 0.28466871049579506, -0.38284266722934046, -0.8788601808099998 ), 0.25489879120358155 ],
    [ new Vector3( -0.2021767822544634, -0.22163041550428098, 0.9539415640596813 ), 5.41627644903481 ],
    [ new Vector3( 0.17297872084162647, 0.802481812738545, -0.5710528017266472 ), 3.193839560215795 ],
    [ new Vector3( 0.4379884581017699, 0.23169739668912923, -0.868609478958821 ), 0.13615015543900447 ],
    [ new Vector3( 0.1760618558364704, -0.0745113998081714, 0.9815550286245008 ), 4.817400117722199 ],
    [ new Vector3( 0.5531056709033979, -0.40913121798331453, 0.7257311921682792 ), 3.721138445551037 ],
    [ new Vector3( 0.689043295537246, -0.723213804342283, 0.046702570421051914 ), 5.492686702732714 ],
    [ new Vector3( 0.31688278349762256, -0.9075972416401679, -0.2754134137800075 ), 4.549749637689802 ],
    [ new Vector3( -0.09511381226346027, -0.7442209183841776, 0.6611267558918809 ), 2.634052320851634 ],
    [ new Vector3( 0.38554791661795784, 0.8130640316903824, -0.4362105963441662 ), 0.016516777887274924 ],
    [ new Vector3( 0.7172163593108822, 0.6904105220703215, -0.09451986537987507 ), 3.701297124039763 ],
    [ new Vector3( 0.3233418709116374, 0.9438214486851058, -0.06819902871236648 ), 1.0496662491628612 ]
]