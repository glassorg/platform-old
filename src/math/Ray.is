// import .Vector3
// import .functions
//     equivalent
// import .Sphere
// import .AABB

// export default data struct Ray

//     var point: Vector3
//     var unitHeading: Vector3

//     // constructor(point: Vector3, heading: Vector3) ->
//     //     this.point = point
//     //     if !equivalent(heading.lengthSquared(), 1)
//     //         this.unitHeading = heading.normalize()
//     //     else
//     //         this.unitHeading = heading

//     getPosition(distance: Number) -> this.point.add(this.unitHeading.scale(distance))

//     containsPoint(point: Vector3) ->
//         return equivalent(point.subtract(this.point).dot(this.unitHeading), 0)
